/*
 * Asterisk -- An open source telephony toolkit.
 *
 * Copyright (C) 2012 - 2013, Digium, Inc.
 *
 * David M. Lee, II <dlee@digium.com>
 *
 * See http://www.asterisk.org for more information about
 * the Asterisk project. Please do not directly contact
 * any of the maintainers of this project for assistance;
 * the project provides a web site, mailing lists and IRC
 * channels for your use.
 *
 * This program is free software, distributed under the terms of
 * the GNU General Public License Version 2. See the LICENSE file
 * at the top of the source tree.
 */

/*! \file
 *
 * \brief Generated file - declares stubs to be implemented in
 * res/stasis_http/resource_events.c
 *
 * WebSocket resource
 *
 * \author David M. Lee, II <dlee@digium.com>
 */

/*
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * !!!!!                               DO NOT EDIT                        !!!!!
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * This file is generated by a mustache template. Please see the original
 * template in rest-api-templates/stasis_http_resource.h.mustache
 */

#ifndef _ASTERISK_RESOURCE_EVENTS_H
#define _ASTERISK_RESOURCE_EVENTS_H

#include "asterisk/stasis_http.h"

/*! \brief Argument struct for stasis_http_event_websocket() */
struct ast_event_websocket_args {
	/*! \brief Comma seperated list of applications to subscribe to. */
	const char *app;
	/*! \brief RFC6455 header for upgrading a connection to a websocket. */
	const char *upgrade;
};
/*!
 * \brief WebSocket connection for events.
 *
 * \param headers HTTP headers
 * \param args Swagger parameters
 * \param[out] response HTTP response
 */
void stasis_http_event_websocket(struct ast_variable *headers, struct ast_event_websocket_args *args, struct stasis_http_response *response);

/*
 * JSON models
 *
 * DtmfReceived
 * - digit: string 
 * - channel: Channel 
 * BridgeCreated
 * - bridge: Bridge 
 * BridgeDestroyed
 * - bridge: Bridge 
 * ApplicationReplaced
 * - application: string 
 * ChannelLeftBridge
 * - bridge: Bridge 
 * - channel: Channel 
 * StasisStart
 * - args: List[string] 
 * - channel_info: Channel 
 * StasisEnd
 * - channel_info: Channel 
 * ChannelStateChange
 * - channel_info: Channel 
 * ChannelEnteredBridge
 * - bridge: Bridge 
 * - channel: Channel 
 * Event
 * - stasis_start: StasisStart 
 * - channel_entered_bridge: ChannelEnteredBridge 
 * - channel_left_bridge: ChannelLeftBridge 
 * - application_replaced: ApplicationReplaced 
 * - channel_state_change: ChannelStateChange 
 * - bridge_created: BridgeCreated 
 * - application: string (required)
 * - stasis_end: StasisEnd 
 * - dtmf_received: DtmfReceived 
 * - bridge_destroyed: BridgeDestroyed 
 */

#endif /* _ASTERISK_RESOURCE_EVENTS_H */
